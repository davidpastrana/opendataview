<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx-3.0.xsd">

	<context:component-scan
		base-package="com.opendataview" />

	<bean id="jpaVendorAdapter"
		class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
		<property name="databasePlatform"
			value="org.hibernate.spatial.dialect.postgis.PostgisDialect" />
		<property name="generateDdl" value="true" />
		<property name="showSql" value="false" />
	</bean>

	<bean id="jpaDialect"
		class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />

	<bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
		<property name="persistenceXmlLocation"
			value="classpath*:META-INF/persistence.xml" />
		<property name="persistenceUnitName" value="opendataview" />
		<property name="jpaDialect" ref="jpaDialect" />
		<property name="jpaPropertyMap">
			<props>
				<prop key="hibernate.cache.use_second_level_cache">false</prop>
				<prop key="hibernate.cache.use_query_cache">false</prop>
			</props>
		</property>
	</bean>

	<bean id="mainDataSource"
		class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close"
		lazy-init="false">
		<property name="driverClassName"
			value="org.postgresql.Driver" />
		<property name="url"
			value="jdbc:postgresql://127.0.0.1/opendataview" />
		<property name="username" value="postgres" />
		<property name="password" value="postgres" />
		<property name="maxActive" value="10" />
		<property name="maxIdle" value="25" />
		<property name="minIdle" value="3" />
		<property name="minEvictableIdleTimeMillis" value="10000" />
		<property name="timeBetweenEvictionRunsMillis" value="20000" />
		<property name="validationQuery" value="SELECT 1" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="true" />
		<property name="maxWait" value="8000" />
		<property name="poolPreparedStatements" value="true" />
	</bean>

	<bean id="dataSource"
		class="org.springframework.jdbc.datasource.LazyConnectionDataSourceProxy">
		<property name="targetDataSource">
			<ref bean="mainDataSource" />
		</property>
	</bean>
	
	<bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.springapp.model"/>
		<!-- <property name="hibernateProperties">
		<props>
				<prop key="hibernate.dialect">org.hibernate.spatial.dialect.postgis.PostgisDialect</prop>
				
				
				<prop key="hibernate.show_sql">true</prop> 
				<prop key="hibernate.format_sql">true</prop>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				
				
				
				<prop key="hibernate.jdbc.batch_size">20</prop>
				
				hibernate cache 
				<prop key="hibernate.cache.use_query_cache">true</prop>
				<prop key="hibernate.cache.use_second_level_cache">true</prop>
				  <prop key="hibernate.cache.provider_class">org.hibernate.cache.EhCacheProvider</prop>
				<prop key="hibernate.cache.region.factory_class">org.hibernate.cache.ehcache.EhCacheRegionFactory</prop>
				<prop key="net.sf.ehcache.configurationResourceName">ehcache.xml</prop>-->
				
				<!-- hibernate search configuration 
				<prop key="hibernate.search.default.indexmanager">elasticsearch</prop>
				<prop key="hibernate.search.default.elasticsearch.index_schema_management_strategy">MERGE</prop>
				
				<prop key="hibernate.search.lucene_version">LUCENE_CURRENT</prop>
				<prop key="hibernate.search.default.directory_provider">filesystem</prop>
				<prop key="hibernate.search.default.indexBase">near-real-time</prop>
				<prop key="hibernate.search.default.chunk_size">128000</prop>
				<prop key="hibernate.search.default.exclusive_index_use">false</prop>
				<prop key="hibernate.search.default.worker.execution">async</prop>
				<prop key="hibernate.search.default.worker.thread_pool.size">2</prop>
				<prop key="hibernate.search.default.worker.buffer_queue.size">50</prop>

				
				hibernate search Index Optimization 
				<prop key="hibernate.search.default.optimizer.operation_limit.max">1000</prop>
				<prop key="hibernate.search.default.optimizer.transaction_limit.max">100</prop>
		</props>
		</property>-->
	</bean>
	

	<bean id="transactionManager"
		class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory"
			ref="entityManagerFactory" />
	</bean>

	<bean id="persistenceExceptionTranslationPostProcessor"
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />
		
 <!--  
    <bean name="elasticsearchTemplate" class="org.springframework.data.elasticsearch.core.ElasticsearchTemplate">
        <constructor-arg name="client" ref="client"/>
    </bean>-->

	<tx:annotation-driven />


</beans>